<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>koolskateguy89</groupId>
	<artifactId>Anime-Filler-Manager</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1</version>

	<name>AFM</name>
	<url>https://github.com/koolskateguy89/Anime-Filler-Manager</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.release>17</maven.compiler.release>
		<kotlin.version>1.5.31</kotlin.version>
		<kotlin.compiler.incremental>true</kotlin.compiler.incremental>
		<main.class>afm.LauncherKt</main.class>

		<lombok.version>1.18.22</lombok.version>
		<javafx.version>15.0.1</javafx.version>
		<controlsfx.version>11.1.1</controlsfx.version>
		<reactive-jikan.version>1.0.2</reactive-jikan.version>
		<guava.version>31.0.1-jre</guava.version>
		<jsoup.version>1.14.3</jsoup.version>
		<sqlite-jdbc.version>3.36.0.3</sqlite-jdbc.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>koolskateguy89</groupId>
			<artifactId>afm-filler</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Project Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!--<editor-fold desc="Kotlin">-->
		<!-- Kotlin -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<!--</editor-fold>-->

		<!--<editor-fold desc="JavaFX">-->
		<!-- JavaFX -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!--</editor-fold>-->

		<!-- ControlsFX (only for Notification atm) -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controlsfx.version}</version>
		</dependency>

		<!-- TODO: Jikan API Java wrapper -->
		<dependency>
			<groupId>net.sandrohc</groupId>
			<artifactId>reactive-jikan</artifactId>
			<version>${reactive-jikan.version}</version>
		</dependency>

		<!-- Google Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- jsoup -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>

		<!-- sqlite jdbc driver -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>${sqlite-jdbc.version}</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${project.name}-without-dependencies</finalName>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- FIXME -->
			<!-- Using Proguard Maven plugin: https://stackoverflow.com/a/34706467 -->
			<!-- Obfuscate after shading so optimize everything ? -->
			<!-- uses proguard.conf -->
			<!--plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>obfuscation-packaging</id>
						<goals>
							<goal>proguard</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<obfuscate>true</obfuscate>
					<appendClassifier>false</appendClassifier>
					<addMavenDescriptor>true</addMavenDescriptor>
					<injar>${project.build.finalName}.jar</injar>
					<injarNotExistsSkip>true</injarNotExistsSkip>
					<libs>
						<lib>${java.home}/jmods/java.base.jmod</lib>
					</libs>
					<!- - Only use this if after shade -->
					<!-- Exclude all dependencies because they should already be in the jar -->
					<!--exclusions>
						<exclusion>
							<groupId>org.openjfx</groupId>
							<artifactId>javafx-base</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.openjfx</groupId>
							<artifactId>javafx-controls</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.openjfx</groupId>
							<artifactId>javafx-fxml</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.openjfx</groupId>
							<artifactId>javafx-media</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.controlsfx</groupId>
							<artifactId>controlsfx</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.google.guava</groupId>
							<artifactId>guava</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.jsoup</groupId>
							<artifactId>jsoup</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.xerial</groupId>
							<artifactId>sqlite-jdbc</artifactId>
						</exclusion>
					</exclusions- - >
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-base</artifactId>
						<version>7.1.0-beta3</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-core</artifactId>
						<version>7.1.0-beta3</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin-->

			<!-- Using Kotlin with Maven https://kotlinlang.org/docs/maven.html -->
			<!-- Because .kt files are under src/main/java, it is simple -->
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>

				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>

					<execution>
						<id>test-compile</id>
						<goals>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<executions>
					<!-- Replacing default-compile as it is treated specially by maven -->
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<!-- Replacing default-testCompile as it is treated specially by maven -->
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Build jar with dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<mainClass>${main.class}</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>${project.name}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
